package codepages

import (
	. "github.com/magicmonty/activesync-go/activesync/base"
	. "github.com/magicmonty/wbxml-go/wbxml"
	"testing"
)

func checkItemOperationsCommonTags(t *testing.T, cp CodePage) {
	checkTagExists(t, TAG_ITEM_OPERATIONS_ITEMOPERATIONS, ID_ITEM_OPERATIONS_ITEMOPERATIONS, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_FETCH, ID_ITEM_OPERATIONS_FETCH, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_STORE, ID_ITEM_OPERATIONS_STORE, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_OPTIONS, ID_ITEM_OPERATIONS_OPTIONS, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_RANGE, ID_ITEM_OPERATIONS_RANGE, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_TOTAL, ID_ITEM_OPERATIONS_TOTAL, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_PROPERTIES, ID_ITEM_OPERATIONS_PROPERTIES, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_DATA, ID_ITEM_OPERATIONS_DATA, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_STATUS, ID_ITEM_OPERATIONS_STATUS, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_RESPONSE, ID_ITEM_OPERATIONS_RESPONSE, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_VERSION, ID_ITEM_OPERATIONS_VERSION, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_SCHEMA, ID_ITEM_OPERATIONS_SCHEMA, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_PART, ID_ITEM_OPERATIONS_PART, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_EMPTYFOLDERCONTENTS, ID_ITEM_OPERATIONS_EMPTYFOLDERCONTENTS, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_DELETESUBFOLDERS, ID_ITEM_OPERATIONS_DELETESUBFOLDERS, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_USERNAME, ID_ITEM_OPERATIONS_USERNAME, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_PASSWORD, ID_ITEM_OPERATIONS_PASSWORD, cp)
}

func Test_ItemOperations_120(t *testing.T) {
	cp := ItemOperations(PROTOCOL_VERSION_12_0)
	checkItemOperationsCommonTags(t, cp)
	checkTagCount(t, 17, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_MOVE, ID_ITEM_OPERATIONS_MOVE, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_DSTFLDID, ID_ITEM_OPERATIONS_DSTFLDID, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_CONVERSATIONID, ID_ITEM_OPERATIONS_CONVERSATIONID, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_MOVEALWAYS, ID_ITEM_OPERATIONS_MOVEALWAYS, cp)
}

func Test_ItemOperations_121(t *testing.T) {
	cp := ItemOperations(PROTOCOL_VERSION_12_1)
	checkItemOperationsCommonTags(t, cp)
	checkTagCount(t, 17, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_MOVE, ID_ITEM_OPERATIONS_MOVE, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_DSTFLDID, ID_ITEM_OPERATIONS_DSTFLDID, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_CONVERSATIONID, ID_ITEM_OPERATIONS_CONVERSATIONID, cp)
	checkTagNotExists(t, TAG_ITEM_OPERATIONS_MOVEALWAYS, ID_ITEM_OPERATIONS_MOVEALWAYS, cp)
}

func Test_ItemOperations_140(t *testing.T) {
	cp := ItemOperations(PROTOCOL_VERSION_14_0)
	checkItemOperationsCommonTags(t, cp)
	checkTagCount(t, 21, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_MOVE, ID_ITEM_OPERATIONS_MOVE, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_DSTFLDID, ID_ITEM_OPERATIONS_DSTFLDID, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_CONVERSATIONID, ID_ITEM_OPERATIONS_CONVERSATIONID, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_MOVEALWAYS, ID_ITEM_OPERATIONS_MOVEALWAYS, cp)
}

func Test_ItemOperations_141(t *testing.T) {
	cp := ItemOperations(PROTOCOL_VERSION_14_1)
	checkItemOperationsCommonTags(t, cp)
	checkTagCount(t, 21, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_MOVE, ID_ITEM_OPERATIONS_MOVE, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_DSTFLDID, ID_ITEM_OPERATIONS_DSTFLDID, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_CONVERSATIONID, ID_ITEM_OPERATIONS_CONVERSATIONID, cp)
	checkTagExists(t, TAG_ITEM_OPERATIONS_MOVEALWAYS, ID_ITEM_OPERATIONS_MOVEALWAYS, cp)
}
