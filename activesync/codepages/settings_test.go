package codepages

import (
	. "github.com/magicmonty/activesync-go/activesync/base"
	. "github.com/magicmonty/wbxml-go/wbxml"
	"testing"
)

func checkSettingsCommonTags(t *testing.T, cp CodePage) {
	checkTagExists(t, TAG_SETTINGS_SETTINGS, ID_SETTINGS_SETTINGS, cp)
	checkTagExists(t, TAG_SETTINGS_STATUS, ID_SETTINGS_STATUS, cp)
	checkTagExists(t, TAG_SETTINGS_GET, ID_SETTINGS_GET, cp)
	checkTagExists(t, TAG_SETTINGS_SET, ID_SETTINGS_SET, cp)
	checkTagExists(t, TAG_SETTINGS_OOF, ID_SETTINGS_OOF, cp)
	checkTagExists(t, TAG_SETTINGS_OOFSTATE, ID_SETTINGS_OOFSTATE, cp)
	checkTagExists(t, TAG_SETTINGS_STARTTIME, ID_SETTINGS_STARTTIME, cp)
	checkTagExists(t, TAG_SETTINGS_ENDTIME, ID_SETTINGS_ENDTIME, cp)
	checkTagExists(t, TAG_SETTINGS_OOFMESSAGE, ID_SETTINGS_OOFMESSAGE, cp)
	checkTagExists(t, TAG_SETTINGS_APPLIESTOINTERNAL, ID_SETTINGS_APPLIESTOINTERNAL, cp)
	checkTagExists(t, TAG_SETTINGS_APPLIESTOEXTERNALKNOWN, ID_SETTINGS_APPLIESTOEXTERNALKNOWN, cp)
	checkTagExists(t, TAG_SETTINGS_APPLIESTOEXTERNALUNKNOWN, ID_SETTINGS_APPLIESTOEXTERNALUNKNOWN, cp)
	checkTagExists(t, TAG_SETTINGS_ENABLED, ID_SETTINGS_ENABLED, cp)
	checkTagExists(t, TAG_SETTINGS_REPLYMESSAGE, ID_SETTINGS_REPLYMESSAGE, cp)
	checkTagExists(t, TAG_SETTINGS_BODYTYPE, ID_SETTINGS_BODYTYPE, cp)
	checkTagExists(t, TAG_SETTINGS_DEVICEPASSWORD, ID_SETTINGS_DEVICEPASSWORD, cp)
	checkTagExists(t, TAG_SETTINGS_PASSWORD, ID_SETTINGS_PASSWORD, cp)
	checkTagExists(t, TAG_SETTINGS_DEVICEINFORMATION, ID_SETTINGS_DEVICEINFORMATION, cp)
	checkTagExists(t, TAG_SETTINGS_MODEL, ID_SETTINGS_MODEL, cp)
	checkTagExists(t, TAG_SETTINGS_IMEI, ID_SETTINGS_IMEI, cp)
	checkTagExists(t, TAG_SETTINGS_FRIENDLYNAME, ID_SETTINGS_FRIENDLYNAME, cp)
	checkTagExists(t, TAG_SETTINGS_OS, ID_SETTINGS_OS, cp)
	checkTagExists(t, TAG_SETTINGS_OSLANGUAGE, ID_SETTINGS_OSLANGUAGE, cp)
	checkTagExists(t, TAG_SETTINGS_PHONENUMBER, ID_SETTINGS_PHONENUMBER, cp)
	checkTagExists(t, TAG_SETTINGS_USERINFORMATION, ID_SETTINGS_USERINFORMATION, cp)
	checkTagExists(t, TAG_SETTINGS_EMAILADDRESSES, ID_SETTINGS_EMAILADDRESSES, cp)
	checkTagExists(t, TAG_SETTINGS_SMTPADDRESS, ID_SETTINGS_SMTPADDRESS, cp)
	checkTagExists(t, TAG_SETTINGS_USERAGENT, ID_SETTINGS_USERAGENT, cp)
}

func Test_Settings_120(t *testing.T) {
	cp := Settings(PROTOCOL_VERSION_12_0)
	checkSettingsCommonTags(t, cp)
	checkTagCount(t, 28, cp)
	checkTagNotExists(t, TAG_SETTINGS_ENABLEOUTBOUNDSMS, ID_SETTINGS_ENABLEOUTBOUNDSMS, cp)
	checkTagNotExists(t, TAG_SETTINGS_MOBILEOPERATOR, ID_SETTINGS_MOBILEOPERATOR, cp)
	checkTagNotExists(t, TAG_SETTINGS_PRIMARYSMTPADDRESS, ID_SETTINGS_PRIMARYSMTPADDRESS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTS, ID_SETTINGS_ACCOUNTS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNT, ID_SETTINGS_ACCOUNT, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTID, ID_SETTINGS_ACCOUNTID, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTNAME, ID_SETTINGS_ACCOUNTNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_USERDISPLAYNAME, ID_SETTINGS_USERDISPLAYNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_SENDDISABLED, ID_SETTINGS_SENDDISABLED, cp)
	checkTagNotExists(t, TAG_SETTINGS_RIGHTSMANAGEMENTINFORMATION, ID_SETTINGS_RIGHTSMANAGEMENTINFORMATION, cp)
}

func Test_Settings_121(t *testing.T) {
	cp := Settings(PROTOCOL_VERSION_12_1)
	checkSettingsCommonTags(t, cp)
	checkTagCount(t, 28, cp)
	checkTagNotExists(t, TAG_SETTINGS_ENABLEOUTBOUNDSMS, ID_SETTINGS_ENABLEOUTBOUNDSMS, cp)
	checkTagNotExists(t, TAG_SETTINGS_MOBILEOPERATOR, ID_SETTINGS_MOBILEOPERATOR, cp)
	checkTagNotExists(t, TAG_SETTINGS_PRIMARYSMTPADDRESS, ID_SETTINGS_PRIMARYSMTPADDRESS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTS, ID_SETTINGS_ACCOUNTS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNT, ID_SETTINGS_ACCOUNT, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTID, ID_SETTINGS_ACCOUNTID, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTNAME, ID_SETTINGS_ACCOUNTNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_USERDISPLAYNAME, ID_SETTINGS_USERDISPLAYNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_SENDDISABLED, ID_SETTINGS_SENDDISABLED, cp)
	checkTagNotExists(t, TAG_SETTINGS_RIGHTSMANAGEMENTINFORMATION, ID_SETTINGS_RIGHTSMANAGEMENTINFORMATION, cp)
}

func Test_Settings_140(t *testing.T) {
	cp := Settings(PROTOCOL_VERSION_14_0)
	checkSettingsCommonTags(t, cp)
	checkTagCount(t, 30, cp)
	checkTagExists(t, TAG_SETTINGS_ENABLEOUTBOUNDSMS, ID_SETTINGS_ENABLEOUTBOUNDSMS, cp)
	checkTagExists(t, TAG_SETTINGS_MOBILEOPERATOR, ID_SETTINGS_MOBILEOPERATOR, cp)
	checkTagNotExists(t, TAG_SETTINGS_PRIMARYSMTPADDRESS, ID_SETTINGS_PRIMARYSMTPADDRESS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTS, ID_SETTINGS_ACCOUNTS, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNT, ID_SETTINGS_ACCOUNT, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTID, ID_SETTINGS_ACCOUNTID, cp)
	checkTagNotExists(t, TAG_SETTINGS_ACCOUNTNAME, ID_SETTINGS_ACCOUNTNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_USERDISPLAYNAME, ID_SETTINGS_USERDISPLAYNAME, cp)
	checkTagNotExists(t, TAG_SETTINGS_SENDDISABLED, ID_SETTINGS_SENDDISABLED, cp)
	checkTagNotExists(t, TAG_SETTINGS_RIGHTSMANAGEMENTINFORMATION, ID_SETTINGS_RIGHTSMANAGEMENTINFORMATION, cp)
}

func Test_Settings_141(t *testing.T) {
	cp := Settings(PROTOCOL_VERSION_14_1)
	checkSettingsCommonTags(t, cp)
	checkTagCount(t, 38, cp)
	checkTagExists(t, TAG_SETTINGS_ENABLEOUTBOUNDSMS, ID_SETTINGS_ENABLEOUTBOUNDSMS, cp)
	checkTagExists(t, TAG_SETTINGS_MOBILEOPERATOR, ID_SETTINGS_MOBILEOPERATOR, cp)
	checkTagExists(t, TAG_SETTINGS_PRIMARYSMTPADDRESS, ID_SETTINGS_PRIMARYSMTPADDRESS, cp)
	checkTagExists(t, TAG_SETTINGS_ACCOUNTS, ID_SETTINGS_ACCOUNTS, cp)
	checkTagExists(t, TAG_SETTINGS_ACCOUNT, ID_SETTINGS_ACCOUNT, cp)
	checkTagExists(t, TAG_SETTINGS_ACCOUNTID, ID_SETTINGS_ACCOUNTID, cp)
	checkTagExists(t, TAG_SETTINGS_ACCOUNTNAME, ID_SETTINGS_ACCOUNTNAME, cp)
	checkTagExists(t, TAG_SETTINGS_USERDISPLAYNAME, ID_SETTINGS_USERDISPLAYNAME, cp)
	checkTagExists(t, TAG_SETTINGS_SENDDISABLED, ID_SETTINGS_SENDDISABLED, cp)
	checkTagExists(t, TAG_SETTINGS_RIGHTSMANAGEMENTINFORMATION, ID_SETTINGS_RIGHTSMANAGEMENTINFORMATION, cp)
}
