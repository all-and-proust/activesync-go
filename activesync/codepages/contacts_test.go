package codepages

import (
	. "github.com/magicmonty/activesync-go/activesync/base"
	. "github.com/magicmonty/wbxml-go/wbxml"
	"testing"
)

func checkContactsCommonTags(t *testing.T, cp CodePage) {
	checkTagExists(t, TAG_CONTACTS_ANNIVERSARY, ID_CONTACTS_ANNIVERSARY, cp)
	checkTagExists(t, TAG_CONTACTS_ASSISTANTNAME, ID_CONTACTS_ASSISTANTNAME, cp)
	checkTagExists(t, TAG_CONTACTS_ASSISTANTPHONENUMBER, ID_CONTACTS_ASSISTANTPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_BIRTHDAY, ID_CONTACTS_BIRTHDAY, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESS2PHONENUMBER, ID_CONTACTS_BUSINESS2PHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSADDRESSCITY, ID_CONTACTS_BUSINESSADDRESSCITY, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSADDRESSCOUNTRY, ID_CONTACTS_BUSINESSADDRESSCOUNTRY, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSADDRESSPOSTALCODE, ID_CONTACTS_BUSINESSADDRESSPOSTALCODE, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSADDRESSSTATE, ID_CONTACTS_BUSINESSADDRESSSTATE, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSADDRESSSTREET, ID_CONTACTS_BUSINESSADDRESSSTREET, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSFAXNUMBER, ID_CONTACTS_BUSINESSFAXNUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_BUSINESSPHONENUMBER, ID_CONTACTS_BUSINESSPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_CARPHONENUMBER, ID_CONTACTS_CARPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_CATEGORIES, ID_CONTACTS_CATEGORIES, cp)
	checkTagExists(t, TAG_CONTACTS_CATEGORY, ID_CONTACTS_CATEGORY, cp)
	checkTagExists(t, TAG_CONTACTS_CHILDREN, ID_CONTACTS_CHILDREN, cp)
	checkTagExists(t, TAG_CONTACTS_CHILD, ID_CONTACTS_CHILD, cp)
	checkTagExists(t, TAG_CONTACTS_COMPANYNAME, ID_CONTACTS_COMPANYNAME, cp)
	checkTagExists(t, TAG_CONTACTS_DEPARTMENT, ID_CONTACTS_DEPARTMENT, cp)
	checkTagExists(t, TAG_CONTACTS_EMAIL1ADDRESS, ID_CONTACTS_EMAIL1ADDRESS, cp)
	checkTagExists(t, TAG_CONTACTS_EMAIL2ADDRESS, ID_CONTACTS_EMAIL2ADDRESS, cp)
	checkTagExists(t, TAG_CONTACTS_EMAIL3ADDRESS, ID_CONTACTS_EMAIL3ADDRESS, cp)
	checkTagExists(t, TAG_CONTACTS_FILEAS, ID_CONTACTS_FILEAS, cp)
	checkTagExists(t, TAG_CONTACTS_FIRSTNAME, ID_CONTACTS_FIRSTNAME, cp)
	checkTagExists(t, TAG_CONTACTS_HOME2PHONENUMBER, ID_CONTACTS_HOME2PHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEADDRESSCITY, ID_CONTACTS_HOMEADDRESSCITY, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEADDRESSCOUNTRY, ID_CONTACTS_HOMEADDRESSCOUNTRY, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEADDRESSPOSTALCODE, ID_CONTACTS_HOMEADDRESSPOSTALCODE, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEADDRESSSTATE, ID_CONTACTS_HOMEADDRESSSTATE, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEADDRESSSTREET, ID_CONTACTS_HOMEADDRESSSTREET, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEFAXNUMBER, ID_CONTACTS_HOMEFAXNUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_HOMEPHONENUMBER, ID_CONTACTS_HOMEPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_JOBTITLE, ID_CONTACTS_JOBTITLE, cp)
	checkTagExists(t, TAG_CONTACTS_LASTNAME, ID_CONTACTS_LASTNAME, cp)
	checkTagExists(t, TAG_CONTACTS_MIDDLENAME, ID_CONTACTS_MIDDLENAME, cp)
	checkTagExists(t, TAG_CONTACTS_MOBILEPHONENUMBER, ID_CONTACTS_MOBILEPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_OFFICELOCATION, ID_CONTACTS_OFFICELOCATION, cp)
	checkTagExists(t, TAG_CONTACTS_OTHERADDRESSCITY, ID_CONTACTS_OTHERADDRESSCITY, cp)
	checkTagExists(t, TAG_CONTACTS_OTHERADDRESSCOUNTRY, ID_CONTACTS_OTHERADDRESSCOUNTRY, cp)
	checkTagExists(t, TAG_CONTACTS_OTHERADDRESSPOSTALCODE, ID_CONTACTS_OTHERADDRESSPOSTALCODE, cp)
	checkTagExists(t, TAG_CONTACTS_OTHERADDRESSSTATE, ID_CONTACTS_OTHERADDRESSSTATE, cp)
	checkTagExists(t, TAG_CONTACTS_OTHERADDRESSSTREET, ID_CONTACTS_OTHERADDRESSSTREET, cp)
	checkTagExists(t, TAG_CONTACTS_PAGERNUMBER, ID_CONTACTS_PAGERNUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_RADIOPHONENUMBER, ID_CONTACTS_RADIOPHONENUMBER, cp)
	checkTagExists(t, TAG_CONTACTS_SPOUSE, ID_CONTACTS_SPOUSE, cp)
	checkTagExists(t, TAG_CONTACTS_SUFFIX, ID_CONTACTS_SUFFIX, cp)
	checkTagExists(t, TAG_CONTACTS_TITLE, ID_CONTACTS_TITLE, cp)
	checkTagExists(t, TAG_CONTACTS_WEBPAGE, ID_CONTACTS_WEBPAGE, cp)
	checkTagExists(t, TAG_CONTACTS_YOMICOMPANYNAME, ID_CONTACTS_YOMICOMPANYNAME, cp)
	checkTagExists(t, TAG_CONTACTS_YOMIFIRSTNAME, ID_CONTACTS_YOMIFIRSTNAME, cp)
	checkTagExists(t, TAG_CONTACTS_YOMILASTNAME, ID_CONTACTS_YOMILASTNAME, cp)
	checkTagExists(t, TAG_CONTACTS_PICTURE, ID_CONTACTS_PICTURE, cp)
}

func Test_Contacts_120(t *testing.T) {
	cp := Contacts(PROTOCOL_VERSION_12_0)
	checkContactsCommonTags(t, cp)
	checkTagCount(t, 52, cp)
	checkTagNotExists(t, TAG_CONTACTS_ALIAS, ID_CONTACTS_ALIAS, cp)
	checkTagNotExists(t, TAG_CONTACTS_WEIGHTEDRANK, ID_CONTACTS_WEIGHTEDRANK, cp)
}

func Test_Contacts_121(t *testing.T) {
	cp := Contacts(PROTOCOL_VERSION_12_1)
	checkContactsCommonTags(t, cp)
	checkTagCount(t, 52, cp)
	checkTagNotExists(t, TAG_CONTACTS_ALIAS, ID_CONTACTS_ALIAS, cp)
	checkTagNotExists(t, TAG_CONTACTS_WEIGHTEDRANK, ID_CONTACTS_WEIGHTEDRANK, cp)
}

func Test_Contacts_140(t *testing.T) {
	cp := Contacts(PROTOCOL_VERSION_14_0)
	checkContactsCommonTags(t, cp)
	checkTagCount(t, 54, cp)
	checkTagExists(t, TAG_CONTACTS_ALIAS, ID_CONTACTS_ALIAS, cp)
	checkTagExists(t, TAG_CONTACTS_WEIGHTEDRANK, ID_CONTACTS_WEIGHTEDRANK, cp)
}

func Test_Contacts_141(t *testing.T) {
	cp := Contacts(PROTOCOL_VERSION_14_1)
	checkContactsCommonTags(t, cp)
	checkTagCount(t, 54, cp)
	checkTagExists(t, TAG_CONTACTS_ALIAS, ID_CONTACTS_ALIAS, cp)
	checkTagExists(t, TAG_CONTACTS_WEIGHTEDRANK, ID_CONTACTS_WEIGHTEDRANK, cp)
}
