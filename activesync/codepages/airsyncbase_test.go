package codepages

import (
	. "github.com/magicmonty/activesync-go/activesync/base"
	. "github.com/magicmonty/wbxml-go/wbxml"
	"testing"
)

func checkAirSyncBaseCommonTags(t *testing.T, cp CodePage) {
	checkTagExists(t, TAG_AIRSYNC_BASE_BODYPREFERENCE, ID_AIRSYNC_BASE_BODYPREFERENCE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_TYPE, ID_AIRSYNC_BASE_TYPE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_TRUNCATIONSIZE, ID_AIRSYNC_BASE_TRUNCATIONSIZE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_ALLORNONE, ID_AIRSYNC_BASE_ALLORNONE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_BODY, ID_AIRSYNC_BASE_BODY, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_DATA, ID_AIRSYNC_BASE_DATA, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_ESTIMATEDDATASIZE, ID_AIRSYNC_BASE_ESTIMATEDDATASIZE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_TRUNCATED, ID_AIRSYNC_BASE_TRUNCATED, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_ATTACHMENTS, ID_AIRSYNC_BASE_ATTACHMENTS, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_ATTACHMENT, ID_AIRSYNC_BASE_ATTACHMENT, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_DISPLAYNAME, ID_AIRSYNC_BASE_DISPLAYNAME, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_FILEREFERENCE, ID_AIRSYNC_BASE_FILEREFERENCE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_METHOD, ID_AIRSYNC_BASE_METHOD, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_CONTENTID, ID_AIRSYNC_BASE_CONTENTID, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_CONTENTLOCATION, ID_AIRSYNC_BASE_CONTENTLOCATION, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_ISINLINE, ID_AIRSYNC_BASE_ISINLINE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_NATIVEBODYTYPE, ID_AIRSYNC_BASE_NATIVEBODYTYPE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_CONTENTTYPE, ID_AIRSYNC_BASE_CONTENTTYPE, cp)
}

func Test_AirSyncBase_120(t *testing.T) {
	cp := AirSyncBase(PROTOCOL_VERSION_12_0)
	checkAirSyncBaseCommonTags(t, cp)
	checkTagCount(t, 18, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_PREVIEW, ID_AIRSYNC_BASE_PREVIEW, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPARTPREFERENCE, ID_AIRSYNC_BASE_BODYPARTPREFERENCE, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPART, ID_AIRSYNC_BASE_BODYPART, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_STATUS, ID_AIRSYNC_BASE_STATUS, cp)
}

func Test_AirSyncBase_121(t *testing.T) {
	cp := AirSyncBase(PROTOCOL_VERSION_12_1)
	checkAirSyncBaseCommonTags(t, cp)
	checkTagCount(t, 18, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_PREVIEW, ID_AIRSYNC_BASE_PREVIEW, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPARTPREFERENCE, ID_AIRSYNC_BASE_BODYPARTPREFERENCE, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPART, ID_AIRSYNC_BASE_BODYPART, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_STATUS, ID_AIRSYNC_BASE_STATUS, cp)
}

func Test_AirSyncBase_140(t *testing.T) {
	cp := AirSyncBase(PROTOCOL_VERSION_14_0)
	checkAirSyncBaseCommonTags(t, cp)
	checkTagCount(t, 19, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_PREVIEW, ID_AIRSYNC_BASE_PREVIEW, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPARTPREFERENCE, ID_AIRSYNC_BASE_BODYPARTPREFERENCE, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_BODYPART, ID_AIRSYNC_BASE_BODYPART, cp)
	checkTagNotExists(t, TAG_AIRSYNC_BASE_STATUS, ID_AIRSYNC_BASE_STATUS, cp)
}

func Test_AirSyncBase_141(t *testing.T) {
	cp := AirSyncBase(PROTOCOL_VERSION_14_1)
	checkAirSyncBaseCommonTags(t, cp)
	checkTagCount(t, 22, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_PREVIEW, ID_AIRSYNC_BASE_PREVIEW, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_BODYPARTPREFERENCE, ID_AIRSYNC_BASE_BODYPARTPREFERENCE, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_BODYPART, ID_AIRSYNC_BASE_BODYPART, cp)
	checkTagExists(t, TAG_AIRSYNC_BASE_STATUS, ID_AIRSYNC_BASE_STATUS, cp)
}
